apiVersion: v1
kind: Namespace
metadata:
  name: mcp-mesh
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world-agent
  namespace: mcp-mesh
  labels:
    app: hello-world
    mesh-agent: "true"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
        mesh-agent: "true"
        capability: greeting
    spec:
      containers:
        - name: agent
          image: mcp-mesh/hello-world:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: MCP_MESH_HTTP_ENABLED
              value: "true"
            - name: MCP_MESH_REGISTRY_URL
              value: "http://mcp-mesh-registry.mcp-mesh.svc.cluster.local:8000"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /livez
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: hello-world-service
  namespace: mcp-mesh
  labels:
    app: hello-world
spec:
  selector:
    app: hello-world
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: system-agent
  namespace: mcp-mesh
  labels:
    app: system-agent
    mesh-agent: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: system-agent
  template:
    metadata:
      labels:
        app: system-agent
        mesh-agent: "true"
        capability: SystemAgent
    spec:
      containers:
        - name: agent
          image: mcp-mesh/system-agent:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: MCP_MESH_HTTP_ENABLED
              value: "true"
            - name: MCP_MESH_REGISTRY_URL
              value: "http://mcp-mesh-registry.mcp-mesh.svc.cluster.local:8000"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /livez
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: system-agent-service
  namespace: mcp-mesh
  labels:
    app: system-agent
spec:
  selector:
    app: system-agent
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  type: ClusterIP
---
# Example: Registry deployment (simplified)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-mesh-registry
  namespace: mcp-mesh
  labels:
    app: mcp-mesh-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mcp-mesh-registry
  template:
    metadata:
      labels:
        app: mcp-mesh-registry
    spec:
      containers:
        - name: registry
          image: mcp-mesh/registry:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: HOST
              value: "0.0.0.0"
            - name: PORT
              value: "8000"
            - name: DATABASE_URL
              value: "postgres://registry:password@postgres:5432/mcp_mesh"
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-mesh-registry
  namespace: mcp-mesh
  labels:
    app: mcp-mesh-registry
spec:
  selector:
    app: mcp-mesh-registry
  ports:
    - port: 8000
      targetPort: http
      protocol: TCP
      name: http
  type: ClusterIP
