apiVersion: v1
kind: ConfigMap
metadata:
  name: mcp-registry-config
  namespace: mcp-mesh
data:
  # Database configuration - matches Docker setup
  DATABASE_TYPE: "postgres"
  DATABASE_HOST: "mcp-mesh-postgres"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "mcpmesh"
  DATABASE_USERNAME: "mcpmesh"

  # Registry server configuration - matches Docker setup
  HOST: "0.0.0.0"
  PORT: "8000"

  # Logging configuration - enhanced for k8s debugging
  MCP_MESH_LOG_LEVEL: "DEBUG"
  MCP_MESH_DEBUG_MODE: "true"

  # Connection pool configuration
  DB_CONNECTION_TIMEOUT: "30"
  DB_MAX_OPEN_CONNECTIONS: "25"
  DB_MAX_IDLE_CONNECTIONS: "5"
  DB_CONN_MAX_LIFETIME: "300"

  # Performance/heartbeat configuration
  DEFAULT_TIMEOUT_THRESHOLD: "20"
  HEALTH_CHECK_INTERVAL: "10"
  DEFAULT_EVICTION_THRESHOLD: "60"

  # Registry identification
  REGISTRY_NAME: "mcp-mesh-registry"

  # Observability configuration - matches Docker setup
  MCP_MESH_DISTRIBUTED_TRACING_ENABLED: "true"
  TRACE_EXPORTER_TYPE: "otlp"
  TELEMETRY_ENDPOINT: "tempo:4317"
  TELEMETRY_PROTOCOL: "grpc"

  # Redis connection for tracing and session storage
  REDIS_URL: "redis://mcp-mesh-redis:6379"

  # Additional tracing configuration
  TRACE_BATCH_SIZE: "100"
  TRACE_TIMEOUT: "5m"
  TRACE_PRETTY_OUTPUT: "false"
  TRACE_ENABLE_STATS: "true"

  # Consumer configuration
  STREAM_NAME: "mesh:trace"
  CONSUMER_GROUP: "mcp-mesh-registry-processors"

  # Enhanced debugging and additional configuration
  MCP_MESH_TRACE_DEBUG: "true"

  # Additional environment variables that work in docker compose
  ENABLE_RESPONSE_CACHE: "true"
  ENABLE_CORS: "true"
  ENABLE_METRICS: "true"
  ENABLE_PROMETHEUS: "true"
  ENABLE_EVENTS: "true"
  ACCESS_LOG: "true"

  # Critical tracing configuration
  CACHE_TTL: "30"
