apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-mesh-hello-world
  namespace: mcp-mesh
  labels:
    app.kubernetes.io/name: mcp-mesh-hello-world
    app.kubernetes.io/component: agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mcp-mesh-hello-world
      app.kubernetes.io/component: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mcp-mesh-hello-world
        app.kubernetes.io/component: agent
    spec:
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        fsGroup: 0
      containers:
        - name: hello-world-agent
          image: mcpmesh/python-runtime:0.1.3
          imagePullPolicy: IfNotPresent
          command: ["/app/agent.py"]
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            # Registry connection - configurable for federated networks
            - name: MCP_MESH_REGISTRY_HOST
              valueFrom:
                configMapKeyRef:
                  name: mcp-agent-config
                  key: REGISTRY_HOST
            - name: MCP_MESH_REGISTRY_PORT
              valueFrom:
                configMapKeyRef:
                  name: mcp-agent-config
                  key: REGISTRY_PORT
            # HTTP server binding - bind to all interfaces
            - name: HOST
              value: "0.0.0.0"
            # Kubernetes service discovery - auto-detect from labels
            - name: SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/name']
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            # Fallback pod IP for backward compatibility
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MCP_MESH_AGENT_NAME
              value: "hello-world"
          envFrom:
            - configMapRef:
                name: mcp-agent-config
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: agent-code
              mountPath: /app/agent.py
              subPath: hello_world.py
              readOnly: true
          securityContext:
            allowPrivilegeEscalation: true
            readOnlyRootFilesystem: false

      volumes:
        - name: agent-code
          configMap:
            name: mcp-agent-code

---
apiVersion: v1
kind: Service
metadata:
  name: mcp-mesh-hello-world
  namespace: mcp-mesh
  labels:
    app.kubernetes.io/name: mcp-mesh-hello-world
    app.kubernetes.io/component: agent
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: mcp-mesh-hello-world
    app.kubernetes.io/component: agent
