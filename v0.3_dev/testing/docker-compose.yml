version: "3.8"

services:
  # Registry service
  registry:
    build:
      context: ../../
      dockerfile: docker/registry/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - MCP_MESH_LOG_LEVEL=DEBUG
      - HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Redis for session storage (Phase 6+)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes

  # FastMCP agent - scalable service for session affinity testing
  fastmcp-agent:
    image: python:3.11-slim
    volumes:
      - ../../src/runtime/python:/app # Mount actual source code
      - .:/testing # Mount testing directory with copied agents
    working_dir: /app
    command: >
      bash -c "
        pip install -e .[dev] &&
        cd /testing &&
        python fastmcp_agent.py
      "
    environment:
      - MCP_MESH_ENABLED=true
      - MCP_MESH_AUTO_RUN=true
      - MCP_MESH_REGISTRY_URL=http://registry:8000
      - REDIS_URL=redis://redis:6379
      - POD_PORT=8080
      - MCP_MESH_HTTP_PORT=8080
      - MCP_MESH_LOG_LEVEL=DEBUG
    depends_on:
      - registry
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Enhanced FastMCP agent - kwargs-configured capabilities
  enhanced-fastmcp-agent:
    image: python:3.11-slim
    volumes:
      - ../../src/runtime/python:/app # Mount actual source code
      - .:/testing # Mount testing directory with copied agents
    working_dir: /app
    command: >
      bash -c "
        pip install -e .[dev] &&
        cd /testing &&
        python enhanced_fastmcp_agent.py
      "
    environment:
      - MCP_MESH_ENABLED=true
      - MCP_MESH_AUTO_RUN=true
      - MCP_MESH_REGISTRY_URL=http://registry:8000
      - REDIS_URL=redis://redis:6379
      - POD_PORT=8080
      - MCP_MESH_HTTP_PORT=8080
      - AGENT_ID=enhanced-fastmcp-service
      - MCP_MESH_LOG_LEVEL=DEBUG
    ports:
      - "8094:8080"
    depends_on:
      - registry
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Dependent agent - depends on time_service from FastMCP agent (regression test)
  dependent-agent:
    image: python:3.11-slim
    volumes:
      - ../../src/runtime/python:/app # Mount actual source code
      - .:/testing # Mount testing directory with copied agents
    working_dir: /app
    command: >
      bash -c "
        pip install -e .[dev] &&
        cd /testing &&
        python dependent_agent.py
      "
    environment:
      - MCP_MESH_ENABLED=true
      - MCP_MESH_AUTO_RUN=true
      - MCP_MESH_REGISTRY_URL=http://registry:8000
      - REDIS_URL=redis://redis:6379
      - POD_IP=dependent-agent
      - POD_PORT=8080
      - MCP_MESH_HTTP_PORT=8080
      - AGENT_ID=dependent-service
      - MCP_MESH_LOG_LEVEL=DEBUG
    ports:
      - "8096:8080"
    depends_on:
      - registry
      - redis
      - fastmcp-agent # Ensure FastMCP agents start first
      - enhanced-fastmcp-agent # Include enhanced agent
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  default:
    name: mcp-mesh-testing
