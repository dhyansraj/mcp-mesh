apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "mcp-mesh-agent.fullname" . }}-config
  labels:
    {{- include "mcp-mesh-agent.labels" . | nindent 4 }}
    {{- with .Values.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  # Registry connection (configurable for federated networks) - matches working examples
  REGISTRY_HOST: {{ .Values.registry.host | default "mcp-mesh-registry" | quote }}
  REGISTRY_PORT: {{ .Values.registry.port | default "8000" | quote }}

  # Complete registry URL (primary variable used by runtime)
  MCP_MESH_REGISTRY_URL: {{ printf "http://%s:%s" (.Values.registry.host | default "mcp-mesh-registry") (.Values.registry.port | default "8000") | quote }}

  # Environment defaults (can be overridden) - matches working examples
  MCP_MESH_HTTP_ENABLED: {{ .Values.agent.http.enabled | default true | quote }}
  MCP_MESH_HTTP_PORT: {{ .Values.agent.http.port | default 8080 | quote }}
  MCP_MESH_LOG_LEVEL: {{ .Values.mesh.logLevel | default "INFO" | quote }}
  MCP_MESH_DEBUG_MODE: {{ .Values.mesh.debug | default false | quote }}
  MCP_MESH_ENABLED: {{ .Values.mesh.enabled | default true | quote }}
  MCP_MESH_AUTO_RUN: "true"
  MCP_MESH_AUTO_RUN_INTERVAL: "30"
  MCP_MESH_HEALTH_INTERVAL: "30"
  MCP_MESH_DYNAMIC_UPDATES: "true"
  MCP_MESH_UPDATE_STRATEGY: "immediate"
  MCP_MESH_NAMESPACE: "default"
  HOST: "0.0.0.0"

  # Python runtime
  PYTHONUNBUFFERED: "1"
  PYTHONPATH: "/app/lib:/app/agents"

  # Performance tuning
  UVICORN_WORKERS: "1"
  UVICORN_LOOP: "auto"
  UVICORN_LIFESPAN: "on"
