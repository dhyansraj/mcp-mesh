apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mcp-mesh-redis.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "mcp-mesh-redis.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mcp-mesh-redis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mcp-mesh-redis.selectorLabels" . | nindent 8 }}
        {{- with .Values.extraLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: redis
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          command:
            - redis-server
            - --appendonly
            - {{ .Values.redis.appendonly | quote }}
            - --maxmemory
            - {{ .Values.redis.maxmemory | quote }}
            - --maxmemory-policy
            - {{ .Values.redis.maxmemoryPolicy | quote }}
            {{- if .Values.customConfig }}
            - --include
            - /etc/redis/redis.conf
            {{- end }}
          env:
            {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: redis-data
              mountPath: /data
            {{- if .Values.customConfig }}
            - name: config
              mountPath: /etc/redis/redis.conf
              subPath: redis.conf
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      volumes:
        - name: redis-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "mcp-mesh-redis.fullname" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.customConfig }}
        - name: config
          configMap:
            name: {{ include "mcp-mesh-redis.fullname" . }}-config
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
