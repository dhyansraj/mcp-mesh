apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mcp-mesh-postgres
  namespace: mcp-mesh
  labels:
    app.kubernetes.io/name: mcp-mesh-postgres
    app.kubernetes.io/component: database
spec:
  serviceName: mcp-mesh-postgres-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mcp-mesh-postgres
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mcp-mesh-postgres
        app.kubernetes.io/component: database
    spec:
      securityContext:
        runAsNonRoot: false # PostgreSQL needs to run as postgres user
        fsGroup: 999 # postgres group
      containers:
        - name: postgres
          image: postgres:15
          imagePullPolicy: IfNotPresent
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: "mcpmesh"
            - name: POSTGRES_USER
              value: "mcpmesh"
            - name: POSTGRES_PASSWORD
              value: "mcpmesh123"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "mcpmesh" -d "mcpmesh" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "mcpmesh" -d "mcpmesh" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          startupProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "mcpmesh" -d "mcpmesh" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsUser: 999 # postgres user
            runAsGroup: 999 # postgres group

  # Volume claim templates for persistent storage
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
        labels:
          app.kubernetes.io/name: mcp-mesh-postgres
          app.kubernetes.io/component: database
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
        # Uncomment to use a specific storage class
        # storageClassName: fast-ssd
