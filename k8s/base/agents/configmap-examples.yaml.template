# Example ConfigMap for Agent Code
#
# This template shows how to include agent scripts from the examples/ directory.
# To use:
# 1. Copy this file and remove the .template extension
# 2. Update the data section with your chosen agent scripts
# 3. Add the file to kustomization.yaml configMapGenerator or resources
#
# Available agents from examples/:
#   examples/simple/hello_world.py
#   examples/simple/system_agent.py
#   examples/advanced/weather_agent.py
#   examples/advanced/llm_chat_agent.py
#   examples/advanced/llm_sampling_agent.py
#   examples/advanced/system_agent.py
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-code-examples
  namespace: mcp-mesh
  labels:
    app.kubernetes.io/name: mcp-mesh
    app.kubernetes.io/component: agent-code
data:
  # Copy the content from examples/simple/hello_world.py
  hello_world.py: |
    # COPY CONTENT FROM: examples/simple/hello_world.py
    # Or use kubectl create configmap to generate from file:
    # kubectl create configmap agent-code-examples \
    #   --from-file=hello_world.py=examples/simple/hello_world.py \
    #   --from-file=system_agent.py=examples/simple/system_agent.py \
    #   --dry-run=client -o yaml > k8s/base/agents/configmap-examples.yaml

  # Copy the content from examples/simple/system_agent.py
  system_agent.py: |
    # COPY CONTENT FROM: examples/simple/system_agent.py

  # Copy the content from examples/advanced/weather_agent.py
  weather_agent.py: |
    # COPY CONTENT FROM: examples/advanced/weather_agent.py

  # Add more agents as needed...

---
# Alternative: Use kustomize configMapGenerator in kustomization.yaml
# This approach is recommended for managing large agent files
#
# configMapGenerator:
#   - name: agent-code-examples
#     files:
#       - hello_world.py=../../examples/simple/hello_world.py
#       - system_agent.py=../../examples/simple/system_agent.py
#       - weather_agent.py=../../examples/advanced/weather_agent.py
