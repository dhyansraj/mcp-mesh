# Example System Agent Deployment
#
# This is a template showing how to deploy the system-agent.
# To use:
# 1. Copy this file and remove the .template extension
# 2. Customize the agent name and environment variables
# 3. Add the file to kustomization.yaml resources
#
# Example:
#   cp example-system-agent-deployment.yaml.template system-agent-deployment.yaml
#   # Edit system-agent-deployment.yaml as needed
#   # Add "- agents/system-agent-deployment.yaml" to kustomization.yaml
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-mesh-system-agent
  namespace: mcp-mesh
  labels:
    app.kubernetes.io/name: mcp-mesh-system-agent
    app.kubernetes.io/component: agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mcp-mesh-system-agent
      app.kubernetes.io/component: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mcp-mesh-system-agent
        app.kubernetes.io/component: agent
    spec:
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        fsGroup: 0
      containers:
        - name: system-agent
          image: mcp-mesh-base:latest
          imagePullPolicy: Never
          command: ["python", "/app/agent.py"]
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            # Registry connection
            - name: MCP_MESH_REGISTRY_HOST
              valueFrom:
                configMapKeyRef:
                  name: mcp-agent-config
                  key: REGISTRY_HOST
            - name: MCP_MESH_REGISTRY_PORT
              valueFrom:
                configMapKeyRef:
                  name: mcp-agent-config
                  key: REGISTRY_PORT
            - name: HOST
              value: "0.0.0.0"
            # Service discovery
            - name: SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/name']
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            # Pod information
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            # MCP Mesh configuration
            - name: MCP_MESH_HTTP_HOST
              value: "0.0.0.0"
            - name: MCP_MESH_HTTP_PORT
              value: "8080"
            - name: MCP_MESH_HTTP_ENABLED
              value: "true"
            - name: MCP_MESH_AGENT_NAME
              value: "system-agent"
            - name: MCP_MESH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            # Mount agent code from ConfigMap
            - name: agent-code
              mountPath: /app/agent.py
              subPath: system_agent.py
              readOnly: true
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      volumes:
        # Agent code volume - replace with your agent script
        - name: agent-code
          configMap:
            name: agent-code-examples  # See configmap-examples.yaml.template
            defaultMode: 0755

---
apiVersion: v1
kind: Service
metadata:
  name: system-agent
  namespace: mcp-mesh
  labels:
    app.kubernetes.io/name: mcp-mesh-system-agent
    app.kubernetes.io/component: agent
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mcp-mesh-system-agent
    app.kubernetes.io/component: agent
