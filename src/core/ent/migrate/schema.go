// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AgentsColumns holds the columns for the "agents" table.
	AgentsColumns = []*schema.Column{
		{Name: "agent_id", Type: field.TypeString},
		{Name: "agent_type", Type: field.TypeEnum, Enums: []string{"mcp_agent", "mesh_tool", "decorator_agent"}, Default: "mcp_agent"},
		{Name: "name", Type: field.TypeString},
		{Name: "version", Type: field.TypeString, Nullable: true},
		{Name: "http_host", Type: field.TypeString, Nullable: true},
		{Name: "http_port", Type: field.TypeInt, Nullable: true},
		{Name: "namespace", Type: field.TypeString, Default: "default"},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"healthy", "unhealthy", "unknown"}, Default: "healthy"},
		{Name: "total_dependencies", Type: field.TypeInt, Default: 0},
		{Name: "dependencies_resolved", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "last_full_refresh", Type: field.TypeTime},
	}
	// AgentsTable holds the schema information for the "agents" table.
	AgentsTable = &schema.Table{
		Name:       "agents",
		Columns:    AgentsColumns,
		PrimaryKey: []*schema.Column{AgentsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "agent_namespace",
				Unique:  false,
				Columns: []*schema.Column{AgentsColumns[6]},
			},
			{
				Name:    "agent_agent_type",
				Unique:  false,
				Columns: []*schema.Column{AgentsColumns[1]},
			},
			{
				Name:    "agent_updated_at",
				Unique:  false,
				Columns: []*schema.Column{AgentsColumns[11]},
			},
			{
				Name:    "agent_status",
				Unique:  false,
				Columns: []*schema.Column{AgentsColumns[7]},
			},
			{
				Name:    "agent_status_updated_at",
				Unique:  false,
				Columns: []*schema.Column{AgentsColumns[7], AgentsColumns[11]},
			},
		},
	}
	// CapabilitiesColumns holds the columns for the "capabilities" table.
	CapabilitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "function_name", Type: field.TypeString},
		{Name: "capability", Type: field.TypeString},
		{Name: "version", Type: field.TypeString, Default: "1.0.0"},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "tags", Type: field.TypeJSON},
		{Name: "kwargs", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "agent_capabilities", Type: field.TypeString},
	}
	// CapabilitiesTable holds the schema information for the "capabilities" table.
	CapabilitiesTable = &schema.Table{
		Name:       "capabilities",
		Columns:    CapabilitiesColumns,
		PrimaryKey: []*schema.Column{CapabilitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "capabilities_agents_capabilities",
				Columns:    []*schema.Column{CapabilitiesColumns[9]},
				RefColumns: []*schema.Column{AgentsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "capability_capability",
				Unique:  false,
				Columns: []*schema.Column{CapabilitiesColumns[2]},
			},
			{
				Name:    "capability_function_name",
				Unique:  false,
				Columns: []*schema.Column{CapabilitiesColumns[1]},
			},
		},
	}
	// RegistryEventsColumns holds the columns for the "registry_events" table.
	RegistryEventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "event_type", Type: field.TypeEnum, Enums: []string{"register", "heartbeat", "expire", "update", "unregister", "unhealthy"}},
		{Name: "function_name", Type: field.TypeString, Nullable: true},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "data", Type: field.TypeJSON},
		{Name: "agent_events", Type: field.TypeString},
	}
	// RegistryEventsTable holds the schema information for the "registry_events" table.
	RegistryEventsTable = &schema.Table{
		Name:       "registry_events",
		Columns:    RegistryEventsColumns,
		PrimaryKey: []*schema.Column{RegistryEventsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "registry_events_agents_events",
				Columns:    []*schema.Column{RegistryEventsColumns[5]},
				RefColumns: []*schema.Column{AgentsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "registryevent_timestamp",
				Unique:  false,
				Columns: []*schema.Column{RegistryEventsColumns[3]},
			},
			{
				Name:    "registryevent_event_type",
				Unique:  false,
				Columns: []*schema.Column{RegistryEventsColumns[1]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AgentsTable,
		CapabilitiesTable,
		RegistryEventsTable,
	}
)

func init() {
	CapabilitiesTable.ForeignKeys[0].RefTable = AgentsTable
	RegistryEventsTable.ForeignKeys[0].RefTable = AgentsTable
}
