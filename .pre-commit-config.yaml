repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        exclude: |
          (?x)^(
            helm/.*/templates/.*\.yaml|
            k8s/base/registry/(rbac|pvc)\.yaml|
            k8s/base/agents/mcpagent-sample\.yaml|
            examples/k8s/base/agents/.*-deployment\.yaml
          )$
      - id: check-toml
      - id: check-json
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-added-large-files
      - id: detect-private-key
      - id: mixed-line-ending

  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black

  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.11.13
    hooks:
      - id: ruff
        args: [--fix]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.16.0
    hooks:
      - id: mypy
        additional_dependencies:
          - mcp>=1.9.0
        args: [--ignore-missing-imports]

  - repo: https://github.com/pycqa/bandit
    rev: 1.8.0
    hooks:
      - id: bandit
        args: [-r, src/]
        exclude: tests/

  - repo: https://github.com/hadolint/hadolint
    rev: v2.13.1-beta
    hooks:
      - id: hadolint-docker
        entry: hadolint
        language: docker_image
        files: Dockerfile

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [yaml, markdown, json]
        exclude: '^helm/.*/templates/.*\.yaml$'

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.0
    hooks:
      - id: yamllint

  # 🤖 CONTRACT-FIRST DEVELOPMENT HOOKS
  # These hooks enforce OpenAPI-first development

  # 1. Validate OpenAPI specification
  - repo: local
    hooks:
      - id: validate-openapi-spec
        name: Validate OpenAPI Specification
        entry: python3 tools/validation/validate_schema.py api/mcp-mesh-registry.openapi.yaml
        language: system
        files: ^api/.*\.yaml$
        description: "🤖 Validates OpenAPI specification syntax and schema"

  # 2. Detect unauthorized endpoints in registry core
  - repo: local
    hooks:
      - id: detect-unauthorized-endpoints
        name: Detect Unauthorized Endpoints
        entry: bash
        args:
          [
            -c,
            "python3 tools/detection/detect_endpoints.py api/mcp-mesh-registry.openapi.yaml api/mcp-mesh-agent.openapi.yaml src/core/registry",
          ]
        language: system
        files: ^(src/core/registry/.*\.(go|py)|api/.*\.yaml)$
        description: "🤖 Ensures all endpoints exist in OpenAPI specification"

  # 3. Validate generated code is up to date
  - repo: local
    hooks:
      - id: check-generated-code
        name: Check Generated Code Up to Date
        entry: bash
        args: [
            -c,
            'echo "Checking if generated code is up to date...";
            make generate > /dev/null 2>&1;
            if ! git diff --exit-code src/core/registry/generated/ src/runtime/python/src/mcp_mesh/registry_client_generated/ > /dev/null 2>&1;
            then echo "Generated code is out of date!"; echo "Run: make generate"; exit 1;
            fi; echo "Generated code is up to date"',
          ]
        language: system
        files: ^api/.*\.yaml$
        description: "🤖 Ensures generated code matches OpenAPI specification"

  # 4. Prevent direct modification of generated code
  - repo: local
    hooks:
      - id: prevent-generated-code-modification
        name: Prevent Generated Code Modification
        entry: bash
        args: [
            -c,
            'echo "Direct modification of generated code is not allowed!";
            echo "To make changes:";
            echo "1. Update api/mcp-mesh-registry.openapi.yaml";
            echo "2. Run: make generate";
            echo "3. Implement business logic in handlers_impl.go";
            exit 1',
          ]
        language: system
        files: ^src/core/registry/generated/.*$
        description: "🤖 Prevents direct modification of generated code"

  # 5. Contract validation for Go code
  - repo: local
    hooks:
      - id: validate-go-contract
        name: Validate Go Contract Compliance
        entry: bash
        args: [
            -c,
            'echo "Validating Go code contract compliance...";
            if ! go build -o /tmp/registry ./src/core/registry > /dev/null 2>&1;
            then echo "Go code does not compile with generated handlers!";
            echo "Fix compilation errors in business logic";
            exit 1;
            fi; echo "Go contract validation passed"',
          ]
        language: system
        files: ^src/core/registry/.*\.go$
        exclude: ^src/core/registry/generated/.*$
        description: "🤖 Validates Go code compiles with generated handlers"
